# number of nginx workers (just asynchronously forwarding)
# only 1 should be enough (2 recommended until we investigate more)
worker_processes 2;

# docker points the path to stderr
error_log /var/log/nginx/error.log;

events {
    # number of opened connections per worker (both sides)
    # default limit is 1024 on OS
    # real value 2 x 16 x coog workers number
    # since we want to buffer and we don't have a strategy for worker_processes
    # => set to max
    worker_connections 1024;

    # accept immediately as many connection as it can
    multi_accept on;
}

http {
    # docker points the path to stdout
    log_format coog '$time_iso8601 $remote_addr $upstream_addr $status $request_time $request_length $bytes_sent';
    access_log /var/log/nginx/access.log coog;

    # timeout in seconds (nginx <-> client)
    # depends on heaviest transactions
    send_timeout 600;

    # timeout in seconds (nginx <-> backend)
    # depends on heaviest transactions
    proxy_send_timeout 600;
    proxy_read_timeout 600;

    # avoid waiting to have big pacquets (to avoid protocols overhead)
    # https://t37.net/optimisations-nginx-bien-comprendre-sendfile-tcp-nodelay-et-tcp-nopush.html
    tcp_nodelay on;

    upstream coog_workers {
        # least_conn is the load balacing method that select a server with
        # the less active(s) connection(s) for the next request.
        least_conn;

        # coog workers
        # placeholder to be filled at startup by nginx script
        # port does not change (hard defined on coog image)
        # server coog-backend-host-1:port-1;
        # server coog-backend-host-2:port-2;
        # server coog-backend-host-3:port-3;
        # server coog-backend-host-4:port-4;
        # server coog-backend-host-5:port-5;
        # server coog-backend-host-6:port-6;
        # server coog-backend-host-7:port-7;
        # server coog-backend-host-8:port-8;
        # server coog-backend-host-9:port-9;
        # server coog-backend-host-10:port-10;
        # server coog-backend-host-11:port-11;
        # server coog-backend-host-12:port-12;
    }

    server {
        # main entry point url (default on nginx docker image)
        listen 80;

        # redirection
        location / {
            proxy_pass http://coog_workers;
        }
    }
}
