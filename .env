#!/bin/bash
# This script sets coog administration environment

ip() {
        local exists
        exists=`docker ps | grep "$1\s*$" | wc -l`
        [ $exists -eq 0 ] && return
        docker inspect --format '{{ .NetworkSettings.IPAddress }}' $1
}

get_latest() {
        echo `docker images --format '{{.Repository}}:{{.Tag}}' | grep "$1" | sort | tail -1`
}

#-------------------------------------------------------------------------------#
# GENERAL PURPOSE
#-------------------------------------------------------------------------------#

PREFIX=/usr/local/coog                  # NEVER CHANGE THIS
[ ! -d $PREFIX ] && mkdir $PREFIX
WORKERS=4                               # workers number

#-------------------------------------------------------------------------------#
# POSTGRES CONFIG
#-------------------------------------------------------------------------------#

PG_IMAGE=postgres:9.4                   # docker image
PG_CONTAINER=postgres                   # docker container
PG_VOLUME=$PREFIX/pg                    # docker data volume

PG_HOST=`ip $PG_CONTAINER`              # server host
PG_PORT=5432                            # server port
PG_USERNAME=postgres                    # postgres username
PG_PASSWORD=postgres                    # postgres pasword

#-------------------------------------------------------------------------------#
# REDIS CONFIG
#-------------------------------------------------------------------------------#

REDIS_IMAGE=redis:3.0                   # docker image
REDIS_CONTAINER=redis                   # docker container
REDIS_VOLUME=$PREFIX/redis              # docker data volume

REDIS_HOST=`ip $REDIS_CONTAINER`        # server host
REDIS_PORT=6379                         # server port

#-------------------------------------------------------------------------------#
# SENTRY CONFIG
#-------------------------------------------------------------------------------#

SENTRY_IMAGE=sentry:8                   # docker image
SENTRY_CONTAINER=sentry                 # docker container (prefix)
SENTRY_KEY=$PREFIX/sentry.key           # containers shared key
SENTRY_VOLUME=$PREFIX/sentry            # docker data volume
SENTRY_CONF=$SENTRY_VOLUME/config.yml   # sentry config file
SENTRY_PUB_PORT=9000                    # host mapped port

SENTRY_PROTOCOL=http                    # server protocol
SENTRY_HOST=`ip $SENTRY_CONTAINER`      # server ip
SENTRY_PORT=9000                        # server port

SENTRY_DB_USERNAME=$PG_USERNAME         # database username
SENTRY_DB_PASSWORD=$PG_PASSWORD         # database password
SENTRY_DB_NAME=sentry                   # database db name

SENTRY_CACHE_DB=5                       # cache db name (redis)

#-------------------------------------------------------------------------------#
# COOG CONFIG
#-------------------------------------------------------------------------------#

COOG_IMAGE=coog/coog:1.8        # docker image
COOG_CONTAINER=coog             # docker container (prefix on multi)
COOG_VOLUME=$PREFIX/coog        # docker data volume
COOG_PUB_PORT=                  # host mapped port (+n for nth worker)

COOG_SESSION_SUPERPWD=super     # coog super password (not a user)

COOG_DB_SYS=postgresql          # database system (postgres, etc.)
COOG_DB_USERNAME=$PG_USERNAME   # database username
COOG_DB_PASSWORD=$PG_PASSWORD   # database password
COOG_DB_NAME=coog               # database db name
COOG_DB_LANG=fr_FR              # database locale - eg. fr_FR

COOG_CACHE_SYS=redis            # cache system (redis or none)
COOG_CACHE_DB=0                 # cache db name (redis)
COOG_CACHE_MODEL=               # models cache size
COOG_CACHE_RECORD=              # records cache size
COOG_CACHE_FIELD=               # fields cache size
COOG_CACHE_COOG=                # coog cache size

COOG_ASYNC_SYS=celery           # async broker (celery, rq, etc)
COOG_ASYNC_DB=1                 # async db name (redis)

# sentry dsn format: {PROTOCOL}://{PUBLIC_KEY}:{SECRET_KEY}@{HOST}/{PATH}{PROJECT_ID}
# sentry dsn variables: http://pub:sec@hostname:port/project
COOG_SENTRY_PUB=                # should be retrieved from sentry app
COOG_SENTRY_SEC=                # should be retrieved from sentry app
COOG_SENTRY_PROJECT=            # should be retrieved from sentry app

#-------------------------------------------------------------------------------#
# NGINX CONFIG
#-------------------------------------------------------------------------------#

NGINX_IMAGE=nginx:1             # docker image
NGINX_CONTAINER=nginx           # docker container
NGINX_CONF=$PREFIX/nginx.conf   # nginx conf path
NGINX_PUB_PORT=80               # host mapped port

#-------------------------------------------------------------------------------#
# CUSTOMS
#-------------------------------------------------------------------------------#

[ -f $PREFIX/env ] && source $PREFIX/env
