#!/bin/bash
# This script helps doing with postgres docker image.
# More informations: https://hub.docker.com/_/postgres/

get_dir() {
        local script_path; script_path=`readlink -f $0`
        local script_dir; script_dir=`dirname $script_path`
        echo $script_dir
}

server() {
        docker run \
                -d \
                --name $PG_CONTAINER \
                -e "POSTGRES_USER=$PG_USERNAME" \
                -e "POSTGRES_PASSWORD=$PG_PASSWORD" \
                -e "PGDATA=/var/lib/postgresql/data/pgdata" \
                -v $PG_VOLUME:/var/lib/postgresql/data \
                $PG_IMAGE
}

client() {
        local args
        if [ ! -z $1 ]
        then
                if [ $1 = tty ]
                then
                        args=-i
                else
                        args=-it
                fi
        else
                args=-it
        fi
        docker run \
                $args --rm \
                --link $PG_CONTAINER:postgres \
                $PG_IMAGE \
                sh -c 'exec psql -h "$POSTGRES_PORT_5432_TCP_ADDR" -p "$POSTGRES_PORT_5432_TCP_PORT" -U '"$PG_USERNAME"
}

action() {
        docker $1 $PG_CONTAINER
}

usage() {
        echo
        echo Available commands
        echo
        echo "  server   -> runs a postgres docker image as a server"
        echo "  client   -> runs a postgres docker image as a client"
        echo "  logs     -> shows postgres server logs"
        echo "  top      -> shows postgres server container top"
        echo "  stats    -> shows postgres server container stats"
        echo "  start    -> starts postgres server container"
        echo "  stop     -> stops postgres server container"
        echo "  restart  -> restarts postgres server container"
        echo "  rm       -> removes postgres server container"
        echo
}

main() {
        source `get_dir`/config
        #
        [ -z $1 ] && usage && return 1
        local cmd; cmd=$1; shift
        #
        [ $cmd = "server" ] && { server $*; return $?; }
        [ $cmd = "client" ] && { client $*; return $?; }
        [ $cmd = "logs" ] && { action "logs"; return $?; }
        [ $cmd = "top" ] && { action "top"; return $?; }
        [ $cmd = "stats" ] && { action "stats"; return $?; }
        [ $cmd = "start" ] && { action "start"; return $?; }
        [ $cmd = "stop" ] && { action "stop"; return $?; }
        [ $cmd = "restart" ] && { action "restart"; return $?; }
        [ $cmd = "rm" ] && { action "rm"; return $?; }
        usage && return 1
}

main $*
