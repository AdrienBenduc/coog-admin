#!/bin/bash
# This script helps doing with redis docker image.
# More informations: https://hub.docker.com/_/redis/

server() {
        docker run \
                -d \
                --name $REDIS_CONTAINER \
                -v $REDIS_VOLUME:/data \
                $REDIS_IMAGE \
                redis-server
}

client() {
        docker run \
                -ti --rm \
                --link $REDIS_CONTAINER:redis \
                $REDIS_IMAGE \
                sh -c 'exec redis-cli -h "$REDIS_PORT_6379_TCP_ADDR" -p "$REDIS_PORT_6379_TCP_PORT"'
}

action() {
        docker $1 $REDIS_CONTAINER
}

usage() {
        echo
        echo Available commands
        echo
        echo "  server   -> runs a redis docker image as a server"
        echo "  client   -> runs a redis docker image as a client"
        echo "  top      -> shows redis server container top"
        echo "  stats    -> shows redis server container stats"
        echo "  start    -> starts redis server container"
        echo "  stop     -> stops redis server container"
        echo "  restart  -> restarts redis server container"
        echo "  rm       -> removes redis server container"
        echo
}

main() {
        local script_path; script_path=`readlink -f $0`
        local script_dir; script_dir=`dirname $script_path`
        source $script_dir/.env
        #
        [ -z $1 ] && usage && return 1
        local cmd; cmd=$1; shift
        #
        [ $cmd = "server" ] && { server $*; return $?; }
        [ $cmd = "client" ] && { client $*; return $?; }
        [ $cmd = "top" ] && { action "top"; return $?; }
        [ $cmd = "stats" ] && { action "stats"; return $?; }
        [ $cmd = "start" ] && { action "start"; return $?; }
        [ $cmd = "stop" ] && { action "stop"; return $?; }
        [ $cmd = "restart" ] && { action "restart"; return $?; }
        [ $cmd = "rm" ] && { action "rm"; return $?; }
        usage && return 1
}

main $*
